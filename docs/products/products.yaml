# ROUTES
paths:
  /api/products:
    get:
      summary: Retrieve the product list.
      tags:
        - Products
      responses:
        "200":
          description: The product list was successfully obtained.
        "400":
          description: Product list not found.
        "500":
          description: An internal server error occurred.

  /api/products/create:
    get:
      summary: Retrieve the product creation form.
      tags:
        - Create Product
      responses:
        "200":
          description: Successfully obtained the product creation form.
        "400":
          description: Error while fetching the form.
        "500":
          description: An internal server error occurred.

  /api/products/mockingproducts:
    get:
      summary: Retrieve mocking products.
      tags:
        - Mocking Products
      responses:
        "200":
          description: Mocking products were successfully obtained.
        "400":
          description: Mocking products not found.
        "500":
          description: An internal server error occurred.

  /api/products/:
    post:
      summary: Create a new product.
      tags:
        - Create Product
      responses:
        "200":
          description: The product was successfully created.
        "400":
          description: Error occurred while creating the product.
        "500":
          description: An internal server error occurred.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"

  /api/products/delete-product:
    post:
      summary: Delete a product from the database.
      tags:
        - Delete Product
      responses:
        "200":
          description: The product has been successfully deleted.
        "400":
          description: Error occurred while deleting the product.
        "500":
          description: An internal server error occurred.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"

# COMPONENTS
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: ID auto-generated by MongoDB.
        title:
          type: string
          required: true
          description: Title of the product.
        description:
          type: string
          required: true
          description: Description of the product.
        price:
          type: number
          required: true
          description: Price of the product.
        status:
          type: boolean
          required: true
          description: Status of the product.
        code:
          type: string
          required: true
          description: Code of the product.
        stock:
          type: number
          required: true
          description: Available stock of the product.
        category:
          type: string
          required: true
          description: Category of the product.
        thumbnail:
          type: array
          items:
            type: string
          description: Thumbnail images of the product.
